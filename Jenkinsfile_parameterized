#!groovy
@Library("Infrastructure") _

properties([
    parameters([
        string(name: 'PRODUCT_NAME', defaultValue: 'ia', description: ''),
        string(name: 'APP', defaultValue: 'ia-timed-event-service', description: 'IA Timed Event Service'),
        string(name: 'TYPE', defaultValue: 'java', description: ''),
        string(name: 'ENVIRONMENT', defaultValue: 'sandbox', description: 'Environment where code should be build and deployed'),
        choice(name: 'SUBSCRIPTION', choices: 'sandbox\nnonprod\nprod', description: 'Azure subscriptions available to build in')
    ]),
    [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/ia-timed-event-service.git'],
    pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

def secrets = [
    'ia-${env}': [

        secret('idam-client-id', 'IA_IDAM_CLIENT_ID'),
        secret('idam-secret', 'IA_IDAM_SECRET'),
        secret('idam-redirect-uri', 'IA_IDAM_REDIRECT_URI'),
        secret('s2s-secret', 'IA_S2S_SECRET'),
        secret('s2s-microservice', 'IA_S2S_MICROSERVICE')

    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}

withParameterizedPipeline(params.TYPE, params.PRODUCT_NAME, params.APP, params.ENVIRONMENT, params.SUBSCRIPTION) {

    env.CCD_URL = "http://ccd-data-store-api-aat.service.core-compute-aat.internal"
    env.IDAM_URL = "https://idam-web-public.platform.hmcts.net"
    env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"

    loadVaultSecrets(secrets)

    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }
}
