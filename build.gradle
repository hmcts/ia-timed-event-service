buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath("org.yaml:snakeyaml:1.23")
    classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.11")
  }}


plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'com.github.ben-manes.versions' version '0.42.0'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id "io.freefair.lombok" version "5.3.0"
  id "info.solidsoft.pitest" version '1.5.1'
  id 'org.springframework.boot' version '2.7.0'
  id 'org.owasp.dependencycheck' version '6.5.3'
  id 'org.sonarqube' version '3.0'
  id 'org.flywaydb.flyway' version '5.2.4'
  id 'au.com.dius.pact' version '4.1.0'
  id 'uk.gov.hmcts.java' version '0.12.5'
}

def versions = [
        junit           : '5.7.0',
        junitPlatform   : '1.7.2',
        reformLogging   : '5.1.7',
        serenity        : '3.1.20'
]

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

allprojects {
  sourceCompatibility = '11'
  targetCompatibility = '11'
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  useJUnitPlatform()
  // set your environment variables here
  // environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

checkstyle {
  maxWarnings = 0
  toolVersion = '8.29'
  // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
  configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
  toolVersion = "6.18.0"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSets = [
      'category/java/errorprone.xml',
      'category/java/bestpractices.xml'
  ]
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

sonarqube {
  properties {
    property "sonar.projectName", "Reform :: ia-timed-event-service"
    property "sonar.projectKey", "IATIMEDEVENTSERVICE"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/timedevent/infrastructure/config/**"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
  }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport

pitest {
  targetClasses = ['uk.gov.hmcts.reform.timedevent.*']
  excludedClasses = [
      'uk.gov.hmcts.reform.timedevent.infrastructure.config.*',
      'uk.gov.hmcts.reform.timedevent.Application'
  ]
  threads = 10
  outputFormats = ['XML', 'HTML']
  timestampedReports = false
  failWhenNoMutations = false
}

project.tasks['pitest'].group = "Verification"

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all {
      def isNonStable = { String version ->
        ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
          version ==~ /(?i).*[.-]\$qualifier[.\\d-+]*/
        }
      }
      if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
        selection.reject('Release candidate')
      }
    }
  }
}

project.ext {
  set('springCloudVersion', "2021.0.3")
}

dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
  maven {
    url "https://dl.bintray.com/hmcts/hmcts-maven"
  }
}

ext.libraries = [
    junit5: [
        "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
        "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
        "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
        "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
        "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
    ]
]

dependencies {

/*
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
  compile group: 'org.springframework.security', name: 'spring-security-test'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
  compile group: 'org.springframework', name: 'spring-context-support'
  compile group: 'com.github.ben-manes.caffeine', name: 'caffeine'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-core'
  compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310'
  compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv'
  compile group: 'org.yaml', name: 'snakeyaml'
  compile group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: '5.8.1'
  compile group: 'org.javamoney.moneta', name: 'moneta-core', version: '1.4.2'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  implementation group: 'org.springframework.security', name: 'spring-security-crypto'
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations'
*/
  implementation group: 'com.azure.spring', name: 'spring-cloud-azure-starter-keyvault-secrets'
  compile group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.8'
  compile group: 'com.google.guava', name: 'guava', version: '31.1-jre'

  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
  implementation group: 'org.apache.httpcomponents', name: 'httpclient'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-quartz'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap' , version: '3.1.1'
  implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client'
  implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server'
  implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose'

  implementation group: 'org.flywaydb', name: 'flyway-core'
  implementation group: 'org.apache.commons', name: 'commons-lang3'

  implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.1.0'
  implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.2'
  implementation group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.4'
  implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.3'
  implementation group: 'com.sun.xml.bind', name: 'jaxb-osgi', version: '2.3.3'
  implementation group: 'commons-io', name: 'commons-io', version: '2.10.0'

  testImplementation libraries.junit5
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }

//  testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.3.3'
  testImplementation group: 'org.springframework.security', name: 'spring-security-test'
  testImplementation group: 'com.github.tomakehurst', name: 'wiremock', version: '2.23.2'
  testImplementation group: 'ru.lanwen.wiremock', name: 'wiremock-junit5', version: '1.3.1'
  testImplementation group: 'uk.gov.hmcts.reform', name: 'document-management-client', version: '4.0.1'
  testImplementation group: 'org.awaitility', name: 'awaitility', version: '4.0.2'
  testImplementation group: 'com.h2database', name: 'h2', version: '1.4.197'
  testImplementation group: 'org.pitest', name: 'pitest', version: '1.5.2'
  testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity

  integrationTestCompile sourceSets.main.runtimeClasspath
  integrationTestCompile sourceSets.test.runtimeClasspath

  functionalTestCompile sourceSets.main.runtimeClasspath
  functionalTestCompile sourceSets.test.runtimeClasspath

  smokeTestCompile sourceSets.main.runtimeClasspath
  smokeTestCompile sourceSets.test.runtimeClasspath

}

test {
  useJUnitPlatform()
  failFast = true
}

mainClassName = 'uk.gov.hmcts.reform.timedevent.Application'

bootJar {
  getArchiveFileName().set(provider {
    'ia-timed-event-service.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}
